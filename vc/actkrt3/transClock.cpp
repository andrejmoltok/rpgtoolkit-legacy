//////////////////////////////////////////////////////////////////////////
//All contents copyright 2004, Colin James Fitzpatrick (KSNiloc)
//All rights reserved.  YOU MAY NOT REMOVE THIS NOTICE.
//Read LICENSE.txt for licensing info
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// Trans clock sync procedures
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// Inclusions
//////////////////////////////////////////////////////////////////////////
#define WIN32_LEAN_AND_MEAN
#include <windows.h>

//////////////////////////////////////////////////////////////////////////
// Prototypes
//////////////////////////////////////////////////////////////////////////
void APIENTRY initClock(int fps);
void APIENTRY clockStart();
void APIENTRY clockSync();

//////////////////////////////////////////////////////////////////////////
// Member variables
//////////////////////////////////////////////////////////////////////////
long double m_clock = 0;
int m_fps = 0;

//////////////////////////////////////////////////////////////////////////
// Init the clock
//////////////////////////////////////////////////////////////////////////
void APIENTRY initClock(int fps)
{
	m_fps = fps;
}

//////////////////////////////////////////////////////////////////////////
// Start the clock
//////////////////////////////////////////////////////////////////////////
void APIENTRY clockStart()
{
    //Get the tick count
    m_clock = GetTickCount();
}

//////////////////////////////////////////////////////////////////////////
// Sync clock to certain fps
//////////////////////////////////////////////////////////////////////////
void APIENTRY clockSync()
{
    while ((GetTickCount() - m_clock) < (1000 / m_fps))
	{
        //This is a nothing loop; we are NOT going
        //to process events in this loop because it
        //has to be very accurate
    }
}
